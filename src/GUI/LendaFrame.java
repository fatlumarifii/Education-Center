/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import BL.Gjinia;
import BL.Grupi;
import BL.Lenda;
import BL.ProfesorLenda;
import BL.Profesori;
import BL.Qyteti;
import BL.Studenti;
import DAL.LendaException;
import DAL.LendaInterface;
import DAL.LendaRepository;
import DAL.ProfesorLendaInterface;
import DAL.ProfesorLendaRepository;
import DAL.ProfesoriException;
import DAL.ProfesoriInterface;
import DAL.ProfesoriLendaException;
import DAL.ProfesoriRepository;
import DAL.StudentiException;
import DAL.TelStudentiException;
import Model.KomboBox.ProfesoriComboBoxModel;
import Model.LendaTableModel;
import com.sun.glass.events.KeyEvent;
import static java.lang.Character.isDigit;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Arbër Suka
 */
public class LendaFrame extends javax.swing.JInternalFrame {

    LendaTableModel lendaTable = new LendaTableModel();
    ProfesorLendaInterface plR = new ProfesorLendaRepository();
    LendaInterface lendaR = new LendaRepository();
    ProfesoriInterface profR = new ProfesoriRepository();
    ProfesoriComboBoxModel profesorimodelcombo;

    /**
     * Creates new form LandaFrame
     */
    public LendaFrame() {
        initComponents();
        tabelaLoad();
        populateChooserProfesori() ;
    }
    
    public void populateChooserProfesori() {
        List<Profesori> profID = profR.findAll();
        profesorimodelcombo = new ProfesoriComboBoxModel(profID);
        ProfesoriChooser.setModel(profesorimodelcombo);
    }
    
    private void tabelaLoad() {
        List<Lenda> lista= lendaR.findAll();
        lendaTable.add(lista);
        tabela.setModel(lendaTable);
        lendaTable.fireTableDataChanged();
        tabelaSelectedIndexChange();

    }
    private void tabelaSelectedIndexChange() {
        final ListSelectionModel rowSM = tabela.getSelectionModel();
        rowSM.addListSelectionListener(new ListSelectionListener() {

            public void valueChanged(ListSelectionEvent Ise) {
                if (Ise.getValueIsAdjusting()) {
                    return;
                }
                ListSelectionModel rowSM = (ListSelectionModel) Ise.getSource();
                int selectedIndex = rowSM.getAnchorSelectionIndex();
                if (selectedIndex > -1) {
                    Lenda lenda = lendaTable.getLenda(selectedIndex);
                    Profesori p = null;
                    try {
                        p = profR.findByProfeosriId(lenda.getProfesoriID());
                    } catch (ProfesoriException ex) {
                        Logger.getLogger(LendaTableModel.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    emriLendestxt.setText(lenda.getEmriILendes());
                    kredittxt.setText(""+lenda.getKredit());
                    ProfesoriChooser.setSelectedItem(p);
                    ProfesoriChooser.repaint();

                }
            }
        });
    }
    
    
    public void emptyObject(){
        tabela.clearSelection();
        emriLendestxt.setText("");
        kredittxt.setText("");
         populateChooserProfesori() ;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        emriLendestxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabela = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        ProfesoriChooser = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        kredittxt = new javax.swing.JTextField();
        ruajBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Lenda");
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Emri i lëndes : ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 84, 29));

        emriLendestxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emriLendestxtKeyTyped(evt);
            }
        });
        getContentPane().add(emriLendestxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 11, 234, 29));

        tabela.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabela.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabela);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 830, 340));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel2.setText("Profesori :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(336, 18, 70, -1));

        getContentPane().add(ProfesoriChooser, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 11, 130, 29));

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jLabel3.setText("Kredit :");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 11, 70, 29));

        kredittxt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                kredittxtKeyTyped(evt);
            }
        });
        getContentPane().add(kredittxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(634, 11, 130, 29));

        ruajBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ruajBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/save.png"))); // NOI18N
        ruajBtn.setText("Ruaj");
        ruajBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ruajBtnActionPerformed(evt);
            }
        });
        getContentPane().add(ruajBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(113, 94, 100, 35));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/delete.png"))); // NOI18N
        jButton2.setText("Fshije");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(258, 94, 112, 35));

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GUI/Images/cancel.png"))); // NOI18N
        jButton3.setText("Anulo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(409, 94, 117, 35));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ruajBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ruajBtnActionPerformed
        try {
            int row = tabela.getSelectedRow();
            if (emriLendestxt.getText().equals("") || kredittxt.getText().equals("") || ProfesoriChooser.getSelectedIndex() == -1) {
                JOptionPane.showMessageDialog(this, "Ju lutem plotesoni çdo fushë !!!", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                if (row == -1) {
                    Profesori p = (Profesori) ProfesoriChooser.getSelectedItem();
                    Lenda lenda = new Lenda();
                    lenda.setEmriILendes(emriLendestxt.getText());
                    lenda.setKredit(Integer.parseInt(kredittxt.getText()));
                    lenda.setProfesoriID(p.getProfesoriID());
                    lendaR.create(lenda);
                    ProfesorLenda pl = new ProfesorLenda();
                    pl.setLendaID(lenda);
                    pl.setProfesoriID(p);
                    plR.create(pl);
                    JOptionPane.showMessageDialog(this, "E dhëna u ruajt me sukses");
                    
                } else {
                    Profesori p = (Profesori) ProfesoriChooser.getSelectedItem();
                    Lenda lenda = this.lendaTable.getLenda(row);
                    lenda.setEmriILendes(emriLendestxt.getText());
                    lenda.setKredit(Double.parseDouble(kredittxt.getText()));
                    lenda.setProfesoriID(p.getProfesoriID());
                    lendaR.edit(lenda);
                    ProfesorLenda pl = new ProfesorLenda();
                    pl.setLendaID(lenda);
                    pl.setProfesoriID(p);
                    plR.edit(pl);
                    JOptionPane.showMessageDialog(this, "E dhëna u editua me sukses");
                }
                emptyObject();
                tabelaLoad();
            }

        } catch (LendaException | ProfesoriLendaException pe) {
            JOptionPane.showMessageDialog(this, pe.getMessage());
        }
    }//GEN-LAST:event_ruajBtnActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        emptyObject();
        tabela.clearSelection();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            int row = tabela.getSelectedRow();
            if (row > -1) {
                Object[] ob = {"Po", "Jo"};
                int i = javax.swing.JOptionPane.showOptionDialog(this, "A dëshironi ta fshini ?", "Fshirja", JOptionPane.OK_OPTION, JOptionPane.QUESTION_MESSAGE, null, ob, ob[1]);
                if (i == 0) {
                    Lenda l = this.lendaTable.getLenda(row);
                    lendaR.remove(l);
                    tabelaLoad();
                    emptyObject();
                    JOptionPane.showMessageDialog(this, "E dhëna është fshir me sukses !");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Nuk keni selektuar asgjë për të fshir !");
            }
        } catch (LendaException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void tabelaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaMouseClicked
//        int row  = tabela.getSelectedRow();
//        if(row > -1){
//            Lenda l = this.lendaTable.getLenda(row);
//            Profesori p = null;
//            try {
//                p = profR.findByProfeosriId(l.getProfesoriID());
//            } catch (ProfesoriException ex) {
//                Logger.getLogger(LendaTableModel.class.getName()).log(Level.SEVERE, null, ex);
//            }
//            emriLendestxt.setText(l.getEmriILendes());
//            kredittxt.setText(""+l.getKredit());
//            ProfesoriChooser.setSelectedItem(p);
//        }
    }//GEN-LAST:event_tabelaMouseClicked

    private void emriLendestxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emriLendestxtKeyTyped
        char c = evt.getKeyChar();
        if (!((isDigit(c)) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_SHIFT)) {
            evt.consume();
        }
        String number =  emriLendestxt.getText();
        if(number.length()>29 && isDigit(c)){
            JOptionPane.showMessageDialog(this, "Keni tejakaluar numrin e lejuar te Shkronjave(30)", "Gabim" , 0);
            evt.consume();
        }
    }//GEN-LAST:event_emriLendestxtKeyTyped

    private void kredittxtKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_kredittxtKeyTyped
        char c = evt.getKeyChar();
        if (!((isDigit(c)) || c == KeyEvent.VK_BACKSPACE || c == KeyEvent.VK_SHIFT)) {
            evt.consume();
        }
        String number =  emriLendestxt.getText();
        if(number.length()>1 && isDigit(c)){
            JOptionPane.showMessageDialog(this, "Keni tejakaluar numrin e lejuar te numrave(2)", "Gabim" , 0);
            evt.consume();
        }
    }//GEN-LAST:event_kredittxtKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Profesori> ProfesoriChooser;
    private javax.swing.JTextField emriLendestxt;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField kredittxt;
    private javax.swing.JButton ruajBtn;
    private javax.swing.JTable tabela;
    // End of variables declaration//GEN-END:variables
}
